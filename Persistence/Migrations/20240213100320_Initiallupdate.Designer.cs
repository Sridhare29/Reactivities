// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240213100320_Initiallupdate")]
    partial class Initiallupdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Model.BookMeetingRoom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeCount")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("MeetingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<Guid>("kaniniLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("bookMeetingRooms");
                });

            modelBuilder.Entity("Domain.Model.Events", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("EventsName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("events");
                });

            modelBuilder.Entity("Domain.Model.KaniniLocation", b =>
                {
                    b.Property<Guid>("kaniniLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("kaniniLocationId");

                    b.ToTable("kaniniLocations");

                    b.HasData(
                        new
                        {
                            kaniniLocationId = new Guid("09488999-6c0e-4021-b4ed-10f338175fc4"),
                            Location = "Ratha Tek,Chennai"
                        },
                        new
                        {
                            kaniniLocationId = new Guid("11c809e3-2965-48b9-9574-263870cdc4b3"),
                            Location = "kanini,Banglore"
                        },
                        new
                        {
                            kaniniLocationId = new Guid("b510c9de-7f65-445b-a456-bd9e83dd9d7c"),
                            Location = "Futura,Pune"
                        },
                        new
                        {
                            kaniniLocationId = new Guid("4f067a51-7818-4dca-b3b2-2351ecf8fe62"),
                            Location = "kanini,Coimbatore"
                        },
                        new
                        {
                            kaniniLocationId = new Guid("a23dddcc-cd19-4c42-8a9c-6a8d8414d3a4"),
                            Location = "kanini,Noida"
                        });
                });

            modelBuilder.Entity("Domain.Model.MeetingRoom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookMeetingRoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Person")
                        .HasColumnType("int");

                    b.Property<string>("RoomName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Tv")
                        .HasColumnType("bit");

                    b.Property<bool>("WhiteBoard")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BookMeetingRoomId");

                    b.ToTable("meetingRooms");
                });

            modelBuilder.Entity("Domain.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("mobileNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Domain.Model.MeetingRoom", b =>
                {
                    b.HasOne("Domain.Model.BookMeetingRoom", "bookMeetingRoom")
                        .WithMany()
                        .HasForeignKey("BookMeetingRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bookMeetingRoom");
                });
#pragma warning restore 612, 618
        }
    }
}
